- name: launch an ec2-instance
  hosts: local
  connection: local
  vars:
    vpc_subnet_id: subnet-0618adb1a1197676b
    security_group: sg-0ceadcb893f8e3930
    image_id: ami-09c813fb71547fc4f
    instances:
    - mysql
    - backend
    - frontend
    zone: daws81s.icu

  tasks:
  - name: create ec2-instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: "t2.micro"
      vpc_subnet_id:  "{{ vpc_subnet_id }}"
      security_groups:
      - "{{ security_group }}"
      image_id: "{{ image_id }}"
    loop: "{{ instances }}"
    register: ec2_instances

  - name: print output
    debug:
      msg: "{{ ec2_instances }}"

  - name: create route53 private_ip address records
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_instances.results }}"

  - name: create route53 public_ip address records
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_instances.results }}"
    when: item.item == "frontend"





